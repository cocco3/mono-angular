"use strict";(self.webpackChunkmono_angular=self.webpackChunkmono_angular||[]).push([[345],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./projects/ui/src/lib/foundations/Typography.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),blocks=__webpack_require__("./node_modules/@storybook/addon-docs/dist/blocks.mjs");const typographyDictionary={display:{name:"Display",description:"Use for headings, hero text, or any large attention-grabbing text."},text:{name:"Text",description:"Use for paragraphs, descriptions, UI labels, and when readability is key."},mono:{name:"Monospace",description:"Use for for code, structured data, or when visual alignment is important."}},defaultThemeTypography={display:{id:"display",family:"Inter, -apple-system, 'Helvetica Neue', sans-serif",values:{"2xl":{size:"72px",lineHeight:"1.25"},xl:{size:"60px",lineHeight:"1.2"},lg:{size:"48px",lineHeight:"1.25"},md:{size:"36px",lineHeight:"1.22"},sm:{size:"30px",lineHeight:"1.27"},xs:{size:"24px",lineHeight:"1.33"}}},text:{id:"text",family:"Inter, -apple-system, 'Helvetica Neue', sans-serif",values:{xl:{size:"20px",lineHeight:"1.5"},lg:{size:"18px",lineHeight:"1.56"},md:{size:"16px",lineHeight:"1.5"},sm:{size:"14px",lineHeight:"1.43"},xs:{size:"12px",lineHeight:"1.5"}}},mono:{id:"mono",family:"source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace",values:{md:{size:"16px",lineHeight:"1.5"},sm:{size:"14px",lineHeight:"1.43"}}}};function _createMdxContent(props){const _components={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks.W8,{title:"foundations/Typography"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"typography",children:"Typography"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Font is ",(0,jsx_runtime.jsx)(_components.a,{href:"https://fonts.google.com/specimen/Inter",rel:"nofollow",children:"Inter"})," and variables sourced from ",(0,jsx_runtime.jsx)(_components.a,{href:"https://www.untitledui.com/components/typography-styles",rel:"nofollow",children:"Untitled UI"}),"."]}),"\n",(0,jsx_runtime.jsx)("div",{children:Object.values(defaultThemeTypography).map((group=>(0,jsx_runtime.jsxs)("div",{style:{marginBlock:40},children:[(0,jsx_runtime.jsx)(blocks.DZ,{children:typographyDictionary[group.id].name}),(0,jsx_runtime.jsx)("p",{children:typographyDictionary[group.id].description}),(0,jsx_runtime.jsx)("p",{children:(0,jsx_runtime.jsxs)("code",{children:["font-family: ",group.family]})}),(0,jsx_runtime.jsx)("div",{class:"list sb-unstyled",children:Object.entries(group.values).map((([variantKey,variant])=>{const variable=`type-${group.id}-${variantKey}`;return(0,jsx_runtime.jsxs)("div",{class:"row",children:[(0,jsx_runtime.jsx)("div",{class:"variableName",children:variable}),(0,jsx_runtime.jsx)("div",{children:`${variant.size} / ${variant.lineHeight}`}),(0,jsx_runtime.jsx)("div",{style:{font:`var(--${variable})`},children:"Hello world"})]},variable)}))})]},group.id)))}),"\n",(0,jsx_runtime.jsx)("style",{children:"\n  .list {\n    color-scheme: light;\n    display: grid;\n    gap: 12px;\n  }\n\n  .row {\n    align-items: center;\n    color: var(--text-primary);\n    display: grid;\n    gap: 12px;\n    grid-template-columns: 1fr 1fr 2fr;\n  }\n\n  .variableName {\n    font: 500 var(--type-text-md);\n  }\n"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Use the CSS ",(0,jsx_runtime.jsx)(_components.code,{children:"font"})," property and combine the weight with the variable:"]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-css",children:"/* bold and large */\nfont: 700 var(--type-display-lg);\n\n/* regular and small */\nfont: 400 var(--type-text-sm);\n"})})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);