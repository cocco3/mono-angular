(self.webpackChunkmono_angular=self.webpackChunkmono_angular||[]).push([[332],{"./projects/ui/src/lib/base/tooltip/tooltip.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  background: none;\n  border: none;\n  margin: 0;\n  padding: 0;\n}\n\n:host:popover-open {\n  position: absolute;\n}\n\n.content {\n  background-color: var(--bg-quaternary);\n  border-radius: 8px;\n  box-sizing: border-box;\n  color: var(--text-secondary);\n  font: 600 var(--type-text-xs);\n  max-width: 500px;\n  padding-block: 8px;\n  padding-inline: 12px;\n  width: fit-content;\n}\n",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ui/src/lib/base/tooltip/tooltip.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,PopoverClick:()=>PopoverClick,PopoverHover:()=>PopoverHover,__namedExportsOrder:()=>__namedExportsOrder,default:()=>tooltip_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),tooltipngResource=__webpack_require__("./projects/ui/src/lib/base/tooltip/tooltip.css?ngResource"),tooltipngResource_default=__webpack_require__.n(tooltipngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let UiTooltipComponent=class UiTooltipComponent{};UiTooltipComponent=(0,tslib_es6.Cg)([(0,core.Component)({exportAs:"uiTooltip",selector:"ui-tooltip",template:'\n    <div class="content">\n      <ng-content />\n    </div>\n  ',styles:[tooltipngResource_default()]})],UiTooltipComponent);var storybookArgsToTemplate=__webpack_require__("./projects/ui/src/lib/utils/storybookArgsToTemplate.ts"),floating_ui_dom=__webpack_require__("./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs");const UiPopoverPlacements={"above-start":"top-start","above-center":"top","above-end":"top-end","after-start":"right-start","after-center":"right","after-end":"right-end","below-start":"bottom-start","below-center":"bottom","below-end":"bottom-end","before-start":"left-start","before-center":"left","before-end":"left-end"};let UiPopoverDirective=class UiPopoverDirective{el=(0,core.inject)(core.ElementRef);renderer=(0,core.inject)(core.Renderer2);anchor=core.input.required();placement=(0,core.input)("after-center");offset=(0,core.input)(0,{transform:core.numberAttribute});cleanup;updatePosition(){const popoverEl=this.el.nativeElement,anchorEl=this.anchor();anchorEl?this.cleanup=(0,floating_ui_dom.ll)(anchorEl,popoverEl,(()=>{(0,floating_ui_dom.rD)(anchorEl,popoverEl,{middleware:[(0,floating_ui_dom.cY)(this.offset()),(0,floating_ui_dom.UU)(),(0,floating_ui_dom.BN)({padding:8})],placement:UiPopoverPlacements[this.placement()]}).then((({x,y})=>{this.renderer.setStyle(popoverEl,"left",`${x}px`),this.renderer.setStyle(popoverEl,"top",`${y}px`)}))})):console.error("uiPopover: Must provie an anchor element.")}showPopover(){this.el.nativeElement.showPopover?.(),this.updatePosition()}hidePopover(){this.el.nativeElement.hidePopover?.()}togglePopover(){this.el.nativeElement.matches(":popover-open")?this.hidePopover():this.showPopover()}ngOnDestroy(){this.cleanup?.()}static propDecorators={anchor:[{type:core.Input,args:[{isSignal:!0,alias:"anchor",required:!0,transform:void 0}]}],placement:[{type:core.Input,args:[{isSignal:!0,alias:"placement",required:!1,transform:void 0}]}],offset:[{type:core.Input,args:[{isSignal:!0,alias:"offset",required:!1,transform:void 0}]}]}};UiPopoverDirective=(0,tslib_es6.Cg)([(0,core.Directive)({exportAs:"uiPopover",host:{popover:"manual"},selector:"[uiPopover]"})],UiPopoverDirective);const tooltip_stories={component:UiTooltipComponent,tags:["autodocs"],decorators:[(0,dist.moduleMetadata)({imports:[UiPopoverDirective]})],argTypes:{offset:{control:{type:"number"},table:{category:"uiPopover",type:{detail:void 0}}},placement:{options:Object.keys(UiPopoverPlacements),control:{type:"select"},table:{category:"uiPopover",type:{detail:void 0}}}},args:{content:"The quick brown fox jumps over the lazy dog.",offset:4,placement:"after-center"},render:({content,offset,placement,...args})=>({props:args,template:`\n      <ui-tooltip ${(0,storybookArgsToTemplate.N)(args)}>\n        ${content}\n      </ui-tooltip>\n    `})},Default={},PopoverClick={render:({content,offset,placement,...args})=>({props:args,template:`\n      <button\n        #tooltipClickAnchor\n        (click)="tooltip.togglePopover()"\n      >\n        click\n      </button>\n      <ui-tooltip\n        ${(0,storybookArgsToTemplate.N)(args)}\n        uiPopover\n        #tooltip="uiPopover"\n        [anchor]="tooltipClickAnchor"\n        offset="${offset}"\n        [placement]="'${placement}'"\n      >\n        ${content}\n      </ui-tooltip>\n    `})},PopoverHover={render:({content,offset,placement,...args})=>({props:args,template:`\n      <button\n        #tooltipHoverAnchor\n        (mouseenter)="tooltip.showPopover()"\n        (mouseleave)="tooltip.hidePopover()"\n      >\n        hover\n      </button>\n      <ui-tooltip\n        ${(0,storybookArgsToTemplate.N)(args)}\n        uiPopover\n        #tooltip="uiPopover"\n        [anchor]="tooltipHoverAnchor"\n        offset="${offset}"\n        [placement]="'${placement}'"\n      >\n        ${content}\n      </ui-tooltip>\n    `})},__namedExportsOrder=["Default","PopoverClick","PopoverHover"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},PopoverClick.parameters={...PopoverClick.parameters,docs:{...PopoverClick.parameters?.docs,source:{originalSource:'{\n  render: ({\n    content,\n    offset,\n    placement,\n    ...args\n  }) => ({\n    props: args,\n    template: `\n      <button\n        #tooltipClickAnchor\n        (click)="tooltip.togglePopover()"\n      >\n        click\n      </button>\n      <ui-tooltip\n        ${storybookArgsToTemplate(args)}\n        uiPopover\n        #tooltip="uiPopover"\n        [anchor]="tooltipClickAnchor"\n        offset="${offset}"\n        [placement]="\'${placement}\'"\n      >\n        ${content}\n      </ui-tooltip>\n    `\n  })\n}',...PopoverClick.parameters?.docs?.source}}},PopoverHover.parameters={...PopoverHover.parameters,docs:{...PopoverHover.parameters?.docs,source:{originalSource:'{\n  render: ({\n    content,\n    offset,\n    placement,\n    ...args\n  }) => ({\n    props: args,\n    template: `\n      <button\n        #tooltipHoverAnchor\n        (mouseenter)="tooltip.showPopover()"\n        (mouseleave)="tooltip.hidePopover()"\n      >\n        hover\n      </button>\n      <ui-tooltip\n        ${storybookArgsToTemplate(args)}\n        uiPopover\n        #tooltip="uiPopover"\n        [anchor]="tooltipHoverAnchor"\n        offset="${offset}"\n        [placement]="\'${placement}\'"\n      >\n        ${content}\n      </ui-tooltip>\n    `\n  })\n}',...PopoverHover.parameters?.docs?.source}}}},"./projects/ui/src/lib/utils/storybookArgsToTemplate.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{N:()=>storybookArgsToTemplate});const storybookArgsToTemplate=args=>Object.entries(args).filter((([_key,value])=>void 0!==value)).map((([key,value])=>isFunctionType(value)?`(${key})="${formatPropInTemplate(key)}($event)"`:createAngularInputProperty({propertyName:key,value:args[key]}))).join(" "),isFunctionType=value=>"function"==typeof value,formatPropInTemplate=propertyName=>/^[a-zA-Z_$][a-zA-Z0-9_$]*$/.test(propertyName)?propertyName:`this['${propertyName}']`;const createAngularInputProperty=({propertyName,value,_argType})=>{let templateValue;switch(typeof value){case"string":templateValue=`'${value}'`;break;case"object":templateValue=function stringifyCircular(obj){const seen=new Set;return JSON.stringify(obj,((_key,value)=>{if("object"==typeof value&&null!==value){if(seen.has(value))return"[Circular]";seen.add(value)}return value}))}(value).replace(/'/g,"’").replace(/\\"/g,"”").replace(/"([^-"]+)":/g,"$1: ").replace(/"/g,"'").replace(/\u2019/g,"\\'").replace(/\u201D/g,"\\'").split(",").join(", ");break;default:templateValue=value}return`[${propertyName}]="${templateValue}"`}}}]);