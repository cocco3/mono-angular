(self.webpackChunkmono_angular=self.webpackChunkmono_angular||[]).push([[792],{"./projects/countdown/.storybook/preview.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>_storybook_preview});var asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-themes/dist/index.mjs"),standalone=__webpack_require__("./node_modules/prettier/standalone.mjs"),html=__webpack_require__("./node_modules/prettier/plugins/html.mjs");function _formatAngularCode(){return(_formatAngularCode=(0,asyncToGenerator.A)((function*(code){return yield standalone.GP(code,{parser:"angular",plugins:[html]})}))).apply(this,arguments)}const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[],"injectables":[{"name":"EnvironmentService","id":"injectable-EnvironmentService-712d71f558fe9c05cbfd60e2bb0dbff6229ed7dc322e5baa445c8641b5b267585129ffc233b0bbff7fdeaaaf072ffe71a89d4d3f0b9d56d8abd382cf5e8cab2f","file":"projects/countdown/src/app/services/EnvironmentService.ts","properties":[{"name":"config","defaultValue":"environment","deprecated":false,"deprecationMessage":"","type":"EnvConfig","indexKey":"","optional":false,"description":"","line":9,"modifierKind":[148]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { environment } from \'../../environments/environment\';\\nimport { type EnvConfig } from \'../../environments/types\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class EnvironmentService {\\n  readonly config: EnvConfig = environment;\\n}\\n","extends":[],"type":"injectable"},{"name":"GoogleAuthService","id":"injectable-GoogleAuthService-1cbd93c3e3c9cbca685791d1948cf91f5a22d4fe69a814981537acbd5028df182f4f851bfa0a0bef1051efc8447fd3ac1512aa21c16d43bb03b6c5fd029b95b5","file":"projects/countdown/src/app/services/GoogleAuthService.ts","properties":[{"name":"isAuthenticated","defaultValue":"computed(() => !!this.accessToken())","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[125]},{"name":"loginError","defaultValue":"signal<string | null>(null)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[125]}],"methods":[{"name":"clearAccessToken","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[125]},{"name":"initialize","args":[{"type":"AuthConfig","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","modifierKind":[125,134],"jsdoctags":[{"type":"AuthConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"requestAccessToken","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[125]},{"name":"revokeConsent","args":[],"optional":false,"returnType":"unknown","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","modifierKind":[125,134]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { computed, inject, Injectable, signal } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n\\ntype AuthConfig = {\\n  clientId: string;\\n  scopes: string[];\\n};\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class GoogleAuthService {\\n  private router = inject(Router);\\n\\n  private tokenClient: google.accounts.oauth2.TokenClient | null = null;\\n  private accessToken$ = signal<string | null>(null);\\n  public isAuthenticated = computed(() => !!this.accessToken());\\n\\n  public loginError = signal<string | null>(null);\\n\\n  public get accessToken() {\\n    // expose a read-only version of the signal\\n    return this.accessToken$.asReadonly();\\n  }\\n\\n  constructor() {\\n    const storedToken = this.getTokenFromStorage();\\n    this.accessToken$.set(storedToken);\\n  }\\n\\n  public async initialize({ clientId, scopes }: AuthConfig) {\\n    if (!(\'google\' in window)) {\\n      await this.loadGsiScript();\\n    }\\n\\n    const storedToken = this.getTokenFromStorage();\\n\\n    if (storedToken) {\\n      // just use stored token if it\'s available\\n      this.accessToken$.set(storedToken);\\n      this.router.navigate([\'/\']);\\n      return;\\n    }\\n\\n    // Initialize the token client after the script is loaded\\n    this.initTokenClient(clientId, scopes);\\n  }\\n\\n  private loadGsiScript() {\\n    return new Promise<void>((resolve, reject) => {\\n      const scriptElement = document.createElement(\'script\');\\n      scriptElement.src = \'https://accounts.google.com/gsi/client\';\\n      scriptElement.defer = true;\\n      scriptElement.async = true;\\n      scriptElement.onload = () => resolve();\\n      scriptElement.onerror = () =>\\n        reject(new Error(\'Failed to load GSI script.\'));\\n      document.head.appendChild(scriptElement);\\n    });\\n  }\\n\\n  private initTokenClient(clientId: string, scopes: string[]) {\\n    this.tokenClient = google.accounts.oauth2.initTokenClient({\\n      client_id: clientId,\\n      scope: scopes.join(\' \'),\\n      callback: (response) => {\\n        if (response.access_token) {\\n          this.accessToken$.set(response.access_token);\\n          this.saveTokenToStorage(response.access_token, +response.expires_in);\\n          this.router.navigate([\'/\']);\\n        } else {\\n          this.loginError.set(\\n            \'There was an error logging in. Please try again.\'\\n          );\\n          console.error(\'Failed to obtain access token.\');\\n        }\\n      },\\n    });\\n  }\\n\\n  public async revokeConsent() {\\n    return new Promise<{ successful: boolean }>((resolve, reject) => {\\n      const accessToken = this.accessToken();\\n\\n      if (!accessToken) {\\n        reject(new Error(\'Access token not found\'));\\n        return;\\n      }\\n\\n      google.accounts.oauth2.revoke(accessToken, () => {\\n        resolve({ successful: true });\\n      });\\n    });\\n  }\\n\\n  /** access token */\\n  private isTokenExpired(tokenExpiry: string) {\\n    return Date.now() >= parseInt(tokenExpiry);\\n  }\\n\\n  private saveTokenToStorage(accessToken: string, expiresIn: number) {\\n    const tokenExpiry = Date.now() + expiresIn * 1000;\\n    localStorage.setItem(\'accessToken\', accessToken);\\n    localStorage.setItem(\'tokenExpiry\', tokenExpiry.toString());\\n  }\\n\\n  private getTokenFromStorage() {\\n    const accessToken = localStorage.getItem(\'accessToken\');\\n    const tokenExpiry = localStorage.getItem(\'tokenExpiry\');\\n\\n    if (!accessToken || !tokenExpiry) {\\n      return null;\\n    }\\n\\n    if (this.isTokenExpired(tokenExpiry)) {\\n      this.clearTokenFromStorage();\\n      return null;\\n    }\\n\\n    return accessToken;\\n  }\\n\\n  private clearTokenFromStorage() {\\n    localStorage.removeItem(\'accessToken\');\\n    localStorage.removeItem(\'tokenExpiry\');\\n  }\\n\\n  public requestAccessToken() {\\n    this.loginError.set(null);\\n\\n    if (!this.tokenClient) {\\n      console.error(\'Token client is not initialized.\');\\n      return;\\n    }\\n\\n    this.tokenClient.requestAccessToken();\\n  }\\n\\n  public clearAccessToken() {\\n    this.accessToken$.set(null);\\n    this.clearTokenFromStorage();\\n  }\\n  /** access token */\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":26},"accessors":{"accessToken":{"name":"accessToken","getSignature":{"name":"accessToken","type":"","returnType":"","line":23}}},"extends":[],"type":"injectable"},{"name":"GoogleCalendarService","id":"injectable-GoogleCalendarService-5b83b12bb35c1e6b5aebea88d0f7ef1d993ef32fc8828211aa716003aac5535e6c80fc567ddc142e43904f3daf5150fd581ddd803b54c8b1f77cfacf83a71c67","file":"projects/countdown/src/app/services/GoogleCalendarService.ts","properties":[],"methods":[{"name":"createEvent","args":[{"type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getEvents","args":[{"type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<EventsData[]>","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"<p>docs: <a href=\\"https://developers.google.com/workspace/calendar/api/v3/reference/events/list\\">https://developers.google.com/workspace/calendar/api/v3/reference/events/list</a></p>\\n","rawdescription":"\\n\\ndocs: https://developers.google.com/workspace/calendar/api/v3/reference/events/list\\n","sourceCode":"import { inject, Injectable } from \'@angular/core\';\\nimport { HttpClient, HttpHeaders, HttpParams } from \'@angular/common/http\';\\nimport { type Observable } from \'rxjs\';\\nimport { map, catchError } from \'rxjs/operators\';\\nimport { createDateTimeZoned } from \'@cocco3/utils\';\\nimport { GoogleAuthService } from \'./GoogleAuthService\';\\n\\ntype ApiResponse = {\\n  items: {\\n    id: string;\\n    summary?: string;\\n    description?: string;\\n    start?: {\\n      dateTime?: string;\\n      date?: string;\\n    };\\n    end?: {\\n      dateTime?: string;\\n      date?: string;\\n    };\\n  }[];\\n};\\n\\nexport type EventsData = {\\n  id: string;\\n  name: string;\\n  date: string;\\n};\\n\\n/**\\n * docs: https://developers.google.com/workspace/calendar/api/v3/reference/events/list\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class GoogleCalendarService {\\n  private readonly apiUrl = \'https://www.googleapis.com/calendar/v3/calendars\';\\n\\n  private http = inject(HttpClient);\\n  private auth = inject(GoogleAuthService);\\n\\n  createEvent({\\n    calendarId,\\n    query,\\n    summary,\\n    startDate,\\n    startTime,\\n    endDate,\\n    endTime,\\n    timeZone,\\n  }: {\\n    calendarId: string;\\n    query: string;\\n    summary: string;\\n    startDate: string;\\n    startTime?: string;\\n    endDate: string;\\n    endTime?: string;\\n    timeZone: string;\\n  }) {\\n    const accessToken = this.auth.accessToken();\\n\\n    const headers = new HttpHeaders({\\n      Authorization: `Bearer ${accessToken}`,\\n      \'Content-Type\': \'application/json\',\\n    });\\n\\n    const start = prepDates({ date: startDate, time: startTime, timeZone });\\n    const end = prepDates({ date: endDate, time: endTime, timeZone });\\n\\n    const params = {\\n      summary,\\n      description: query,\\n      start,\\n      end,\\n    };\\n\\n    return this.http.post<unknown>(\\n      `${this.apiUrl}/${calendarId}/events`,\\n      params,\\n      { headers }\\n    );\\n  }\\n\\n  getEvents({\\n    calendarId,\\n    query,\\n  }: {\\n    calendarId: string;\\n    query: string;\\n  }): Observable<EventsData[]> {\\n    const accessToken = this.auth.accessToken();\\n\\n    const headers = new HttpHeaders({\\n      Authorization: `Bearer ${accessToken}`,\\n    });\\n\\n    const now = new Date().toISOString();\\n    const params = new HttpParams().set(\'timeMin\', now).set(\'q\', query);\\n\\n    return this.http\\n      .get<ApiResponse>(`${this.apiUrl}/${calendarId}/events`, {\\n        headers,\\n        params,\\n      })\\n      .pipe(\\n        map((response) =>\\n          response.items\\n            .filter((x) => !!x.start?.dateTime || !!x.start?.date)\\n            .map((item) => ({\\n              id: item.id,\\n              name: item.summary || \'\',\\n              date: item.start?.dateTime || item.start?.date || \'\',\\n            }))\\n        ),\\n        catchError((error) => {\\n          console.error(\'Error fetching events:\', error);\\n          throw error;\\n        })\\n      );\\n  }\\n}\\n\\nconst prepDates = ({\\n  date,\\n  time,\\n  timeZone,\\n}: {\\n  date: string;\\n  time?: string;\\n  timeZone: string;\\n}) => {\\n  if (time) {\\n    return { dateTime: createDateTimeZoned(date, time, timeZone) };\\n  } else {\\n    return { date };\\n  }\\n};\\n","extends":[],"type":"injectable"},{"name":"GoogleUserInfoService","id":"injectable-GoogleUserInfoService-4633532391d5857b44a97454907b4bf751bca081f6cceddd63d876baf8b40a701d3a825529c6cf3c7f4f4677fd193587a6225c83680485b9f9f0e3ee715bb612","file":"projects/countdown/src/app/services/GoogleUserInfoService.ts","properties":[{"name":"data","defaultValue":"signal<UserInfoData | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":42}],"methods":[{"name":"fetchUserInfo","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"<p>docs: <a href=\\"https://developers.google.com/people/api/rest/v1/people/get\\">https://developers.google.com/people/api/rest/v1/people/get</a></p>\\n","rawdescription":"\\n\\ndocs: https://developers.google.com/people/api/rest/v1/people/get\\n","sourceCode":"import { inject, Injectable, signal } from \'@angular/core\';\\nimport { HttpClient, HttpHeaders, HttpParams } from \'@angular/common/http\';\\nimport { map, catchError } from \'rxjs/operators\';\\nimport { GoogleAuthService } from \'./GoogleAuthService\';\\n\\ntype ApiResponse = {\\n  resourceName: string;\\n  etag: string;\\n  names?: {\\n    displayName: string;\\n    givenName?: string;\\n    familyName?: string;\\n    metadata: { primary: boolean };\\n  }[];\\n  emailAddresses?: {\\n    value: string;\\n    metadata: { primary: boolean };\\n  }[];\\n  photos?: {\\n    url: string;\\n    metadata: { primary: boolean };\\n  }[];\\n};\\n\\ntype UserInfoData = {\\n  name: string;\\n  email: string;\\n  photo: string;\\n};\\n\\n/**\\n * docs: https://developers.google.com/people/api/rest/v1/people/get\\n */\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class GoogleUserInfoService {\\n  private readonly apiUrl = \'https://people.googleapis.com/v1/people/me\';\\n  private http = inject(HttpClient);\\n  private auth = inject(GoogleAuthService);\\n\\n  data = signal<UserInfoData | undefined>(undefined);\\n\\n  fetchUserInfo() {\\n    if (this.data()) {\\n      return;\\n    }\\n\\n    const accessToken = this.auth.accessToken();\\n\\n    const headers = new HttpHeaders({\\n      Authorization: `Bearer ${accessToken}`,\\n    });\\n\\n    const params = new HttpParams().set(\\n      \'personFields\',\\n      \'emailAddresses,names,photos\'\\n    );\\n\\n    this.http\\n      .get<ApiResponse>(this.apiUrl, { headers, params })\\n      .pipe(\\n        map((response) => ({\\n          email:\\n            response.emailAddresses?.find((x) => x.metadata.primary)?.value ||\\n            \'\',\\n          name:\\n            response.names?.find((x) => x.metadata.primary)?.displayName || \'\',\\n          photo: response.photos?.find((x) => x.metadata.primary)?.url || \'\',\\n        })),\\n        catchError((error) => {\\n          console.error(\'Error fetching profile:\', error);\\n          throw error;\\n        })\\n      )\\n      .subscribe({\\n        next: (data) => this.data.set(data),\\n        error: (error) => console.error(\'Error fetching user:\', error),\\n      });\\n  }\\n}\\n","extends":[],"type":"injectable"},{"name":"LoggerService","id":"injectable-LoggerService-466ff9656de7f637381240b83db1cab174f5a36710cd48d2015b953bbd41067d37a36930253bccdec2d659e5f0ff855d2b08e03a3115d2879a594d568ad46336","file":"projects/countdown/src/app/services/LoggerService.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Inject, Injectable } from \'@angular/core\';\\nimport { Logger } from \'@cocco3/utils\';\\nimport { EnvironmentService } from \'./EnvironmentService\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class LoggerService extends Logger {\\n  constructor(@Inject(EnvironmentService) env: EnvironmentService) {\\n    const isDev = env.config.env === \'dev\' || env.config.env === \'local\';\\n    super({ isDev });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"env","type":"EnvironmentService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"env","type":"EnvironmentService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":["Logger"],"type":"injectable"},{"name":"UserSettingsService","id":"injectable-UserSettingsService-fe91fa1dbc6690b74b6ae83c15b25e106964a2353652615300a186a8ffa1e3f871bc75c0edb38bdfcd916f71939562cbb46944b9f14985f94e5f5accd20a8457","file":"projects/countdown/src/app/services/UserSettingsService.ts","properties":[{"name":"defaultCalendarId","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":9,"modifierKind":[125]},{"name":"defaultFormat","defaultValue":"\'detailed\'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":10,"modifierKind":[125]},{"name":"query","defaultValue":"\'#countdown\'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":7,"modifierKind":[125]},{"name":"timeZone","defaultValue":"Intl.DateTimeFormat().resolvedOptions().timeZone","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":8,"modifierKind":[125]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class UserSettingsService {\\n  public query = \'#countdown\';\\n  public timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\\n  public defaultCalendarId = \'primary\';\\n  public defaultFormat = \'detailed\';\\n}\\n","extends":[],"type":"injectable"}],"guards":[{"name":"AuthGuardService","id":"injectable-AuthGuardService-f9aab008913ff421d7f09eff4b09b2cf413b3788aa13b4c94f7b006262a9e521c43403906ebd7653ef22c136d22b8f601f03b8d0dde42d3daaaacde8b96f7bcf","file":"projects/countdown/src/app/services/AuthGuardService.ts","properties":[],"methods":[{"name":"canActivate","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { inject, Injectable } from \'@angular/core\';\\nimport { type CanActivate, Router } from \'@angular/router\';\\nimport { GoogleAuthService } from \'./GoogleAuthService\';\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class AuthGuardService implements CanActivate {\\n  private auth = inject(GoogleAuthService);\\n  private router = inject(Router);\\n\\n  canActivate(): boolean {\\n    if (this.auth.isAuthenticated()) {\\n      return true;\\n    } else {\\n      this.router.navigate([\'/login\']);\\n      return false;\\n    }\\n  }\\n}\\n","extends":[],"type":"guard"}],"interceptors":[],"classes":[],"directives":[],"components":[{"name":"AppComponent","id":"component-AppComponent-0068a34d1c5adf9805de2c190eef5c0767dde4520cfc51476a3f733341063f02fd5425ae6501ba3d039a6c7392ec78851bd469678702d916f72d0ff6fbcc57d6","file":"projects/countdown/src/app/app.component.ts","encapsulation":[],"entryComponents":[],"host":{},"inputs":[],"outputs":[],"providers":[],"selector":"app-root","styleUrls":[],"styles":[],"templateUrl":["./app.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"RouterOutlet"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { RouterOutlet } from \'@angular/router\';\\n\\n@Component({\\n  host: { class: \'theme-dark\' },\\n  imports: [RouterOutlet],\\n  selector: \'app-root\',\\n  styleUrl: \'./app.component.css\',\\n  templateUrl: \'./app.component.html\',\\n})\\nexport class AppComponent {\\n  protected title = \'CountdownApp\';\\n}\\n","styleUrl":"./app.component.css","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<router-outlet />\\n"},{"name":"AppHeaderComponent","id":"component-AppHeaderComponent-9f54005b1631cf954bec93b5ee1d5a00c6b6b1e58d52094c90b0321bd7a843cb00ac3c633fdb26a73870676532899b5f49681731403ac56428780ff4190a5fae","file":"projects/countdown/src/app/app-header/app-header.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-header","styleUrls":["./app-header.css"],"styles":[],"templateUrl":["./app-header.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"RouterLink"},{"name":"UiAppHeaderComponent","type":"component"},{"name":"UiSlotDirective","type":"directive"},{"name":"UiAvatarComponent","type":"component"},{"name":"UiAppHeaderAnchorComponent","type":"component"},{"name":"UiIconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, computed, inject } from \'@angular/core\';\\nimport { RouterLink } from \'@angular/router\';\\nimport {\\n  UiAppHeaderComponent,\\n  UiAvatarComponent,\\n  UiSlotDirective,\\n  UiAppHeaderAnchorComponent,\\n  UiIconComponent,\\n} from \'@cocco3/angular-ui\';\\nimport { GoogleUserInfoService } from \'../services/GoogleUserInfoService\';\\n\\n@Component({\\n  imports: [\\n    RouterLink,\\n    UiAppHeaderComponent,\\n    UiSlotDirective,\\n    UiAvatarComponent,\\n    UiAppHeaderAnchorComponent,\\n    UiIconComponent,\\n  ],\\n  selector: \'app-header\',\\n  styleUrls: [\'./app-header.css\'],\\n  templateUrl: \'./app-header.html\',\\n})\\nexport class AppHeaderComponent {\\n  private userService = inject(GoogleUserInfoService);\\n  protected user = computed(() => this.userService.data());\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".logo {\\n  align-items: center;\\n  display: flex;\\n  font: 500 24px/1.43 var(--font-family-mono);\\n  gap: 8px;\\n  margin-inline-start: -10px;\\n}\\n\\n@media (width <= 480px) {\\n  .user_name {\\n    display: none;\\n  }\\n}\\n","styleUrl":"./app-header.css"}],"stylesData":"","extends":[],"templateData":"<ui-app-header title=\\"CountdownApp\\">\\n  <a ui-app-header-button uiSlot=\\"logo\\" class=\\"logo\\" routerLink=\\"/\\">\\n    <ui-icon kind=\\"countdown\\" size=\\"28px\\" />\\n    CountdownApp\\n  </a>\\n\\n  @if (!!user()) {\\n    <a ui-app-header-button uiSlot=\\"user\\" routerLink=\\"/settings\\">\\n      <ui-avatar\\n        uiSlot=\\"start\\"\\n        size=\\"small\\"\\n        [fullName]=\\"user()?.name || \'\'\\"\\n        [photoUrl]=\\"user()?.photo\\"\\n      />\\n      <span class=\\"user_name\\">\\n        {{ user()?.name }}\\n      </span>\\n    </a>\\n  }\\n</ui-app-header>\\n"},{"name":"AppMainComponent","id":"component-AppMainComponent-562be1f851d8134ed4fb02053ef928cd25a894ba9e1aeb32a5a1b1a6b0f94322d3d7a5d6ce3bd494322819dfa20dabe7df78f33eebc44884aabbeaa64dc4f813","file":"projects/countdown/src/app/app-main/app-main.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-main","styleUrls":[],"styles":[],"templateUrl":["./app-main.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"RouterOutlet"},{"name":"AppHeaderComponent","type":"component"},{"name":"UiWrapperComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, inject, type OnInit } from \'@angular/core\';\\nimport { RouterOutlet } from \'@angular/router\';\\nimport { UiWrapperComponent } from \'@cocco3/angular-ui\';\\nimport { AppHeaderComponent } from \'../app-header/app-header\';\\nimport { GoogleUserInfoService } from \'../services/GoogleUserInfoService\';\\n\\n@Component({\\n  imports: [RouterOutlet, AppHeaderComponent, UiWrapperComponent],\\n  selector: \'app-main\',\\n  styleUrl: \'./app-main.css\',\\n  templateUrl: \'./app-main.html\',\\n})\\nexport class AppMainComponent implements OnInit {\\n  private userService = inject(GoogleUserInfoService);\\n\\n  ngOnInit() {\\n    this.userService.fetchUserInfo();\\n  }\\n}\\n","styleUrl":"./app-main.css","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"implements":["OnInit"],"templateData":"<app-header />\\n<ui-wrapper class=\\"main\\">\\n  <router-outlet />\\n</ui-wrapper>\\n"},{"name":"CountdownComponent","id":"component-CountdownComponent-b77418f76fa120dbee277e4578144d99d40a49286a2cf70336ee8212204bff4a02b690dbbead9908c1df7f888aa73d1e52a4ad79dd2c9cb4a0a3404114e96224","file":"projects/countdown/src/app/events/countdown/countdown.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-countdown","styleUrls":[],"styles":[],"templateUrl":["./countdown.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"date","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"required":true},{"name":"format","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"required":true},{"name":"name","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":16,"required":true}],"outputsClass":[{"name":"clicked","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"clicked","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false},{"name":"date","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"required":true},{"name":"format","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"required":true},{"name":"name","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":16,"required":true}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"UiTooltipComponent","type":"component"},{"name":"UiPopoverDirective","type":"directive"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, computed, input, output } from \'@angular/core\';\\nimport { UiPopoverDirective, UiTooltipComponent } from \'@cocco3/angular-ui\';\\nimport { formatIsoDate, formatDays, formatComplex } from \'@cocco3/utils\';\\n\\nexport const CountdownFormats = [\'days\', \'detailed\'] as const;\\nexport type CountdownFormat = (typeof CountdownFormats)[number];\\n\\n@Component({\\n  imports: [UiTooltipComponent, UiPopoverDirective],\\n  selector: \'app-countdown\',\\n  styleUrl: \'./countdown.css\',\\n  templateUrl: \'./countdown.html\',\\n})\\nexport class CountdownComponent {\\n  date = input.required<string>();\\n  name = input.required<string>();\\n  format = input.required<CountdownFormat>();\\n\\n  readonly clicked = output<void>();\\n\\n  protected handleClick() {\\n    this.clicked.emit();\\n  }\\n\\n  protected formattedDate = computed(() => {\\n    return formatIsoDate(this.date(), { date: \'long\', time: \'short\' });\\n  });\\n\\n  protected displayName = computed(() => {\\n    return this.name().trim() || \'Event\';\\n  });\\n\\n  protected displayDate = computed(() => {\\n    return this.format() === \'days\'\\n      ? formatDays(this.date())\\n      : formatComplex(this.date());\\n  });\\n}\\n","styleUrl":"./countdown.css","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div>\\n  <span\\n    class=\\"name\\"\\n    #dateTooltipAnchor\\n    (mouseenter)=\\"tooltip.show()\\"\\n    (mouseleave)=\\"tooltip.hide()\\"\\n    (touchstart)=\\"tooltip.toggle()\\"\\n  >\\n    {{ displayName() }}\\n  </span>\\n  <ui-tooltip\\n    uiPopover=\\"tooltip\\"\\n    #tooltip=\\"uiPopover\\"\\n    [anchor]=\\"dateTooltipAnchor\\"\\n    offset=\\"8\\"\\n    placement=\\"after-center\\"\\n  >\\n    {{ formattedDate() }}\\n  </ui-tooltip>\\n</div>\\n\\n<button class=\\"time\\" (click)=\\"handleClick()\\">\\n  {{ displayDate() }}\\n</button>\\n"},{"name":"CreateEventDialogComponent","id":"component-CreateEventDialogComponent-7c034259ea55322eb2abedbc95ca0d810b716e5b16774c126bdbe268a3fa5e3c8146831b15304045254e2bb6d57fb6413750cda5c61fd348ad498ab19abadd11","file":"projects/countdown/src/app/events/create-event-dialog/create-event-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-create-event-dialog","styleUrls":["./create-event-dialog.css"],"styles":[],"templateUrl":["./create-event-dialog.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[{"name":"success","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":48,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"success","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":48,"modifierKind":[148],"required":false}],"methodsClass":[{"name":"showDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":164,"deprecated":false,"deprecationMessage":"","modifierKind":[125]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"ReactiveFormsModule","type":"module"},{"name":"UiAlertComponent","type":"component"},{"name":"UiButtonComponent","type":"component"},{"name":"UiDialogComponent","type":"component"},{"name":"UiFormFieldComponent","type":"component"},{"name":"UiInputComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, inject, output, viewChild } from \'@angular/core\';\\nimport {\\n  type FormGroup,\\n  NonNullableFormBuilder,\\n  ReactiveFormsModule,\\n} from \'@angular/forms\';\\nimport { z } from \'zod\';\\nimport {\\n  UiAlertComponent,\\n  UiButtonComponent,\\n  UiDialogComponent,\\n  UiFormFieldComponent,\\n  UiInputComponent,\\n} from \'@cocco3/angular-ui\';\\nimport { createDateTimeZoned, getToday } from \'@cocco3/utils\';\\nimport { GoogleCalendarService } from \'../../services/GoogleCalendarService\';\\nimport { UserSettingsService } from \'../../services/UserSettingsService\';\\nimport { LoggerService } from \'../../services/LoggerService\';\\n\\ntype FormFields = {\\n  name: string;\\n  startDate: string;\\n  startTime?: string;\\n  endDate: string;\\n  endTime?: string;\\n};\\n\\n@Component({\\n  imports: [\\n    ReactiveFormsModule,\\n    UiAlertComponent,\\n    UiButtonComponent,\\n    UiDialogComponent,\\n    UiFormFieldComponent,\\n    UiInputComponent,\\n  ],\\n  selector: \'app-create-event-dialog\',\\n  styleUrls: [\'./create-event-dialog.css\'],\\n  templateUrl: \'./create-event-dialog.html\',\\n})\\nexport class CreateEventDialogComponent {\\n  private formBuilder = inject(NonNullableFormBuilder);\\n  private calendarService = inject(GoogleCalendarService);\\n  private settings = inject(UserSettingsService);\\n  private logger = inject(LoggerService);\\n  private dialog = viewChild<UiDialogComponent>(\'dialog\');\\n\\n  readonly success = output();\\n\\n  protected error = \'\';\\n  protected isSaving = false;\\n  protected createEventForm: FormGroup;\\n  protected formErrors: Partial<FormFields> = {};\\n\\n  private formSchema = z\\n    .object({\\n      name: z\\n        .string()\\n        .trim()\\n        .refine((value) => value.trim().length > 0, {\\n          message: \'Event name is required\',\\n        }),\\n      startDate: z\\n        .string()\\n        .trim()\\n        .refine((value) => value.trim().length > 0, {\\n          message: \'Start date is required\',\\n        }),\\n      startTime: z.string().optional(),\\n      endDate: z\\n        .string()\\n        .trim()\\n        .refine((value) => value.trim().length > 0, {\\n          message: \'End date is required\',\\n        }),\\n      endTime: z.string().optional(),\\n    })\\n    .superRefine((data, ctx) => {\\n      // validate times\\n      if (data.startTime && !data.endTime) {\\n        ctx.addIssue({\\n          code: z.ZodIssueCode.custom,\\n          message: \'Provide an endTime with startTime\',\\n          path: [\'endTime\'],\\n        });\\n      } else if (!data.startTime && data.endTime) {\\n        ctx.addIssue({\\n          code: z.ZodIssueCode.custom,\\n          message: \'Provide a startTime with endTime\',\\n          path: [\'startTime\'],\\n        });\\n      } else if (\\n        data.startDate &&\\n        data.startTime &&\\n        data.endDate &&\\n        data.endTime\\n      ) {\\n        const start = createDateTimeZoned(\\n          data.startDate,\\n          data.startTime,\\n          this.settings.timeZone\\n        );\\n        const end = createDateTimeZoned(\\n          data.endDate,\\n          data.endTime,\\n          this.settings.timeZone\\n        );\\n\\n        if (end < start) {\\n          ctx.addIssue({\\n            code: z.ZodIssueCode.custom,\\n            message: \'End time must be on or after start\',\\n            path: [\'endTime\'],\\n          });\\n        }\\n      }\\n    })\\n    .superRefine((data, ctx) => {\\n      // validate dates\\n      const start = new Date(data.startDate);\\n      const end = new Date(data.endDate);\\n\\n      if (isNaN(start.getTime()) || isNaN(end.getTime())) {\\n        return;\\n      }\\n\\n      if (end < start) {\\n        ctx.addIssue({\\n          code: z.ZodIssueCode.custom,\\n          message: \'End date must be on or after start date\',\\n          path: [\'endDate\'],\\n        });\\n      }\\n    });\\n\\n  constructor() {\\n    const defaultDate = getToday();\\n\\n    this.createEventForm = this.formBuilder.group({\\n      name: \'\',\\n      startDate: defaultDate,\\n      startTime: \'\',\\n      endDate: defaultDate,\\n      endTime: \'\',\\n    });\\n\\n    // update endDate to be on or after startDate\\n    this.createEventForm\\n      .get(\'startDate\')\\n      ?.valueChanges.subscribe((startDate) => {\\n        const endDateControl = this.createEventForm.get(\'endDate\');\\n        if (endDateControl) {\\n          const endDate = endDateControl.value;\\n\\n          if (endDate && new Date(endDate) < new Date(startDate)) {\\n            endDateControl.setValue(startDate);\\n          }\\n\\n          endDateControl.updateValueAndValidity();\\n        }\\n      });\\n  }\\n\\n  public showDialog() {\\n    this.dialog()?.showModal();\\n  }\\n\\n  protected resetForm() {\\n    this.createEventForm.reset();\\n    this.formErrors = {};\\n    this.error = \'\';\\n  }\\n\\n  protected handleSubmit() {\\n    const formData = this.createEventForm.value;\\n    const validationResult = this.formSchema.safeParse(formData);\\n\\n    if (validationResult.success) {\\n      const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\\n\\n      this.formErrors = {};\\n      this.error = \'\';\\n      this.isSaving = true;\\n\\n      this.calendarService\\n        .createEvent({\\n          calendarId: this.settings.defaultCalendarId,\\n          query: this.settings.query,\\n          summary: validationResult.data.name,\\n          startDate: validationResult.data.startDate,\\n          startTime: validationResult.data.startTime,\\n          endDate: validationResult.data.endDate,\\n          endTime: validationResult.data.endTime,\\n          timeZone,\\n        })\\n        .subscribe({\\n          next: (_response) => {\\n            this.isSaving = false;\\n            this.success.emit();\\n            this.dialog()?.close();\\n          },\\n          error: (error) => {\\n            this.isSaving = false;\\n            this.error =\\n              \'There was an error creating the event. Please try again.\';\\n            this.logger.error(\'Error creating event\', error as Error);\\n          },\\n        });\\n    } else {\\n      this.formErrors = validationResult.error.errors.reduce(\\n        (acc, error) => {\\n          acc[error.path[0]] = error.message;\\n          return acc;\\n        },\\n        {} as Record<string, string>\\n      );\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".form {\\n  display: grid;\\n  gap: 20px;\\n}\\n\\n.dateTime {\\n  display: grid;\\n  gap: 24px 12px;\\n  grid-template-columns: repeat(auto-fit, minmax(min(100%, 160px), 1fr));\\n}\\n","styleUrl":"./create-event-dialog.css"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":134},"extends":[],"templateData":"<dialog\\n  #dialog\\n  ui-dialog\\n  heading=\\"Add Event\\"\\n  description=\\"Leave both times empty for an all day event.\\"\\n  (afterClose)=\\"resetForm()\\"\\n>\\n  <form\\n    id=\\"createEventForm\\"\\n    class=\\"form\\"\\n    [formGroup]=\\"createEventForm\\"\\n    (submit)=\\"handleSubmit()\\"\\n  >\\n    <ui-form-field [label]=\\"\'Name\'\\" [error]=\\"formErrors.name\\">\\n      <input ui-input type=\\"text\\" formControlName=\\"name\\" autocomplete=\\"off\\" />\\n    </ui-form-field>\\n    <div class=\\"dateTime\\">\\n      <ui-form-field [label]=\\"\'Start Date\'\\" [error]=\\"formErrors.startDate\\">\\n        <input ui-input type=\\"date\\" formControlName=\\"startDate\\" #startDate />\\n      </ui-form-field>\\n      <ui-form-field [label]=\\"\'Start Time\'\\" [error]=\\"formErrors.startTime\\">\\n        <input ui-input type=\\"time\\" step=\\"900\\" formControlName=\\"startTime\\" />\\n      </ui-form-field>\\n    </div>\\n    <div class=\\"dateTime\\">\\n      <ui-form-field [label]=\\"\'End Date\'\\" [error]=\\"formErrors.endDate\\">\\n        <input\\n          ui-input\\n          type=\\"date\\"\\n          formControlName=\\"endDate\\"\\n          [min]=\\"startDate.elementRef.nativeElement.value\\"\\n        />\\n      </ui-form-field>\\n      <ui-form-field [label]=\\"\'End Time\'\\" [error]=\\"formErrors.endTime\\">\\n        <input ui-input type=\\"time\\" step=\\"900\\" formControlName=\\"endTime\\" />\\n      </ui-form-field>\\n    </div>\\n  </form>\\n\\n  @if (error) {\\n    <p>\\n      <ui-alert kind=\\"error\\">{{ error }}</ui-alert>\\n    </p>\\n  }\\n\\n  <button\\n    ui-button\\n    uiSlot=\\"cancel\\"\\n    kind=\\"secondary\\"\\n    size=\\"medium\\"\\n    (click)=\\"dialog.close()\\"\\n  >\\n    Cancel\\n  </button>\\n  <button\\n    ui-button\\n    uiSlot=\\"submit\\"\\n    kind=\\"primary\\"\\n    size=\\"medium\\"\\n    type=\\"submit\\"\\n    form=\\"createEventForm\\"\\n    [disabled]=\\"isSaving\\"\\n    [loading]=\\"isSaving\\"\\n  >\\n    Save\\n  </button>\\n</dialog>\\n"},{"name":"PageEventsComponent","id":"component-PageEventsComponent-ef76d99197d6153774a359d3398f6bc9bbe74a9763a9f6568537ac5372aef1253a784973e54f84bdbcc796a8272626627a277a1d07da1e2b7056ebab96f8fa1d","file":"projects/countdown/src/app/events/page-events/page-events.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-page-events","styleUrls":[],"styles":[],"templateUrl":["./page-events.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CountdownComponent","type":"component"},{"name":"CreateEventDialogComponent","type":"component"},{"name":"UiButtonComponent","type":"component"},{"name":"UiEmptyComponent","type":"component"},{"name":"UiSlotDirective","type":"directive"},{"name":"UiIconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  Component,\\n  computed,\\n  inject,\\n  type OnInit,\\n  signal,\\n} from \'@angular/core\';\\nimport { Title } from \'@angular/platform-browser\';\\nimport { compareAsc } from \'date-fns\';\\nimport {\\n  UiButtonComponent,\\n  UiEmptyComponent,\\n  UiIconComponent,\\n  UiSlotDirective,\\n} from \'@cocco3/angular-ui\';\\nimport { GoogleCalendarService } from \'../../services/GoogleCalendarService\';\\nimport { UserSettingsService } from \'../../services/UserSettingsService\';\\nimport {\\n  CountdownComponent,\\n  type CountdownFormat,\\n} from \'../countdown/countdown.component\';\\nimport { CreateEventDialogComponent } from \'../create-event-dialog/create-event-dialog.component\';\\n\\ntype EventItem = {\\n  id: string;\\n  name: string;\\n  date: string;\\n};\\n\\n@Component({\\n  imports: [\\n    CountdownComponent,\\n    CreateEventDialogComponent,\\n    UiButtonComponent,\\n    UiEmptyComponent,\\n    UiSlotDirective,\\n    UiIconComponent,\\n  ],\\n  selector: \'app-page-events\',\\n  styleUrl: \'./page-events.css\',\\n  templateUrl: \'./page-events.html\',\\n})\\nexport class PageEventsComponent implements OnInit {\\n  private calendarService = inject(GoogleCalendarService);\\n  private settings = inject(UserSettingsService);\\n  private title = inject(Title);\\n  protected format: CountdownFormat = \'detailed\';\\n\\n  protected items = signal<EventItem[] | null>(null);\\n  protected hasItems = computed(() => {\\n    const itemsCount = this.items()?.length || 0;\\n    return itemsCount > 0;\\n  });\\n\\n  protected handleCountdownClick() {\\n    if (this.format === \'days\') {\\n      this.format = \'detailed\';\\n    } else {\\n      this.format = \'days\';\\n    }\\n  }\\n\\n  protected fetchItems() {\\n    this.calendarService\\n      .getEvents({\\n        calendarId: this.settings.defaultCalendarId,\\n        query: this.settings.query,\\n      })\\n      .subscribe({\\n        next: (events) => {\\n          const transformedEvents = events.sort((a, b) =>\\n            compareAsc(a.date, b.date)\\n          );\\n          this.items.set(transformedEvents);\\n        },\\n        error: (error) => {\\n          console.error(\'Error loading countdown events:\', error);\\n        },\\n      });\\n  }\\n\\n  ngOnInit() {\\n    this.fetchItems();\\n  }\\n\\n  constructor() {\\n    this.title.setTitle(\'Events - CountdownApp\');\\n  }\\n}\\n","styleUrl":"./page-events.css","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":84},"extends":[],"implements":["OnInit"],"templateData":"@if (items() === null) {\\n  <div>Getting your events...</div>\\n} @else if (hasItems()) {\\n  <div class=\\"container\\">\\n    @for (item of items(); track item.id) {\\n      <app-countdown\\n        [date]=\\"item.date\\"\\n        [name]=\\"item.name\\"\\n        [format]=\\"format\\"\\n        (clicked)=\\"handleCountdownClick()\\"\\n      />\\n    }\\n  </div>\\n  <div>\\n    <button\\n      ui-button\\n      kind=\\"primary\\"\\n      size=\\"large\\"\\n      (click)=\\"createEventDialog.showDialog()\\"\\n    >\\n      Add Event\\n    </button>\\n  </div>\\n} @else {\\n  <ui-empty title=\\"Looks like you don\'t have any countdowns!\\">\\n    <ui-icon uiSlot=\\"image\\" kind=\\"calendar\\" size=\\"80px\\" />\\n    <div uiSlot=\\"content\\">\\n      <p>\\n        Go to <a href=\\"https://calendar.google.com\\">Google Calendar</a> and add\\n        \\"<code>#countdown</code>\\" to the description of any existing event, or\\n        click the button to create a new event.\\n      </p>\\n      <p>\\n        <button\\n          ui-button\\n          kind=\\"primary\\"\\n          size=\\"large\\"\\n          (click)=\\"createEventDialog.showDialog()\\"\\n        >\\n          Add Event\\n        </button>\\n      </p>\\n    </div>\\n  </ui-empty>\\n}\\n\\n<app-create-event-dialog #createEventDialog (success)=\\"fetchItems()\\" />\\n"},{"name":"PageLoginComponent","id":"component-PageLoginComponent-9b152e72a4b8712bb1b66cd8e647c4cba165bd6cfbff8f9ea5f1dfc4eb6c326f0a66e2fe26639decf102dde9988cc7d31bda91aec9cf04fc6ac876eee18e7a9a","file":"projects/countdown/src/app/page-login/page-login.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-page-login","styleUrls":[],"styles":[],"templateUrl":["./page-login.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"login","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"UiButtonComponent","type":"component"},{"name":"UiWrapperComponent","type":"component"},{"name":"UiIconComponent","type":"component"},{"name":"UiAlertComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, computed, inject, type OnInit } from \'@angular/core\';\\nimport { Title } from \'@angular/platform-browser\';\\nimport {\\n  UiButtonComponent,\\n  UiWrapperComponent,\\n  UiIconComponent,\\n} from \'@cocco3/angular-ui\';\\nimport { GoogleAuthService } from \'../services/GoogleAuthService\';\\nimport { EnvironmentService } from \'../services/EnvironmentService\';\\nimport { UiAlertComponent } from \'../../../../ui/src/lib/base/alert/alert.component\';\\n\\n@Component({\\n  imports: [\\n    UiButtonComponent,\\n    UiWrapperComponent,\\n    UiIconComponent,\\n    UiAlertComponent,\\n  ],\\n  selector: \'app-page-login\',\\n  styleUrl: \'./page-login.css\',\\n  templateUrl: \'./page-login.html\',\\n})\\nexport class PageLoginComponent implements OnInit {\\n  private env = inject(EnvironmentService);\\n  private auth = inject(GoogleAuthService);\\n  private title = inject(Title);\\n\\n  protected error = computed(() => this.auth.loginError());\\n\\n  login() {\\n    this.auth.requestAccessToken();\\n  }\\n\\n  ngOnInit() {\\n    this.auth.initialize({\\n      clientId: this.env.config.googleClientId,\\n      scopes: [\\n        \'https://www.googleapis.com/auth/userinfo.email\',\\n        \'https://www.googleapis.com/auth/userinfo.profile\',\\n        \'https://www.googleapis.com/auth/calendar.events\',\\n      ],\\n    });\\n  }\\n\\n  constructor() {\\n    this.title.setTitle(\'Login - CountdownApp\');\\n  }\\n}\\n","styleUrl":"./page-login.css","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":43},"extends":[],"implements":["OnInit"],"templateData":"<ui-wrapper class=\\"container\\">\\n  <div class=\\"logo\\">\\n    <ui-icon kind=\\"countdown\\" size=\\"44px\\" />\\n    CountdownApp\\n  </div>\\n\\n  <p>\\n    CountdownApp integrates with Google Calendar to turn selected events into\\n    countdowns.\\n  </p>\\n  <p>Sign in with your Google account to get started!</p>\\n  <p>\\n    <button ui-button kind=\\"secondary\\" size=\\"medium\\" (click)=\\"login()\\">\\n      Sign In with Google\\n    </button>\\n  </p>\\n  @if (error()) {\\n    <ui-alert kind=\\"error\\" class=\\"alert\\">{{ error() }}</ui-alert>\\n  }\\n</ui-wrapper>\\n"},{"name":"PageSettingsComponent","id":"component-PageSettingsComponent-d14229844c59af43faecfc9996783965f0940b337ca058af14c34617f35ca188270c9cb40631b17bdc840b0f1edb720d98dfa2e5cdee9a2ae2a5956977c8126d","file":"projects/countdown/src/app/settings/page-settings/page-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-page-settings","styleUrls":[],"styles":[],"templateUrl":["./page-settings.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"UnlinkGoogleDialogComponent","type":"component"},{"name":"UiButtonComponent","type":"component"},{"name":"UiFormFieldComponent","type":"component"},{"name":"UiInputComponent","type":"component"},{"name":"UiIconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, computed, inject } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { Title } from \'@angular/platform-browser\';\\nimport {\\n  UiButtonComponent,\\n  UiFormFieldComponent,\\n  UiIconComponent,\\n  UiInputComponent,\\n} from \'@cocco3/angular-ui\';\\nimport { GoogleAuthService } from \'../../services/GoogleAuthService\';\\nimport { UserSettingsService } from \'../../services/UserSettingsService\';\\nimport { UnlinkGoogleDialogComponent } from \'../unlink-google-dialog/unlink-google-dialog.component\';\\n\\n@Component({\\n  imports: [\\n    UnlinkGoogleDialogComponent,\\n    UiButtonComponent,\\n    UiFormFieldComponent,\\n    UiInputComponent,\\n    UiIconComponent,\\n  ],\\n  selector: \'app-page-settings\',\\n  styleUrl: \'./page-settings.css\',\\n  templateUrl: \'./page-settings.html\',\\n})\\nexport class PageSettingsComponent {\\n  private _settings = inject(UserSettingsService);\\n  private auth = inject(GoogleAuthService);\\n  private router = inject(Router);\\n  private title = inject(Title);\\n\\n  constructor() {\\n    this.title.setTitle(\'Settings - CountdownApp\');\\n  }\\n\\n  protected settings = computed(() => {\\n    return this._settings;\\n  });\\n\\n  protected logOut() {\\n    this.auth.clearAccessToken();\\n    this.router.navigate([\'/login\']);\\n  }\\n}\\n","styleUrl":"./page-settings.css","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":30},"extends":[],"templateData":"<div class=\\"panel\\">\\n  <div class=\\"panel_header\\">\\n    <h2 class=\\"panel_title\\">Settings</h2>\\n  </div>\\n  <div class=\\"panel_body\\">\\n    <div class=\\"form\\">\\n      <div>\\n        <ui-form-field [label]=\\"\'Query\'\\">\\n          <input ui-input type=\\"text\\" readonly [value]=\\"settings().query\\" />\\n        </ui-form-field>\\n      </div>\\n\\n      <div>\\n        <ui-form-field [label]=\\"\'Timezone\'\\">\\n          <input ui-input type=\\"text\\" readonly [value]=\\"settings().timeZone\\" />\\n        </ui-form-field>\\n      </div>\\n\\n      <div>\\n        <ui-form-field [label]=\\"\'Calendar\'\\">\\n          <input\\n            ui-input\\n            type=\\"text\\"\\n            readonly\\n            [value]=\\"settings().defaultCalendarId\\"\\n          />\\n        </ui-form-field>\\n      </div>\\n\\n      <div>\\n        <ui-form-field [label]=\\"\'Format\'\\">\\n          <input\\n            ui-input\\n            type=\\"text\\"\\n            readonly\\n            [value]=\\"settings().defaultFormat\\"\\n          />\\n        </ui-form-field>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\"panel\\">\\n  <div class=\\"panel_header\\">\\n    <h2 class=\\"panel_title\\">Linked accounts</h2>\\n  </div>\\n  <div class=\\"panel_body\\">\\n    <div class=\\"row\\">\\n      <div class=\\"app\\">\\n        <ui-icon kind=\\"google\\" size=\\"32px\\" />\\n        Google\\n      </div>\\n      <button\\n        ui-button\\n        kind=\\"tertiary\\"\\n        size=\\"medium\\"\\n        (click)=\\"unlinkGoogleDialog.showDialog()\\"\\n      >\\n        Unlink\\n      </button>\\n    </div>\\n  </div>\\n  <app-unlink-google-dialog #unlinkGoogleDialog />\\n</div>\\n\\n<div class=\\"panel\\">\\n  <div class=\\"panel_header\\">\\n    <h2 class=\\"panel_title\\">Session</h2>\\n  </div>\\n  <div class=\\"panel_body\\">\\n    <button ui-button kind=\\"primary\\" size=\\"large\\" (click)=\\"logOut()\\">\\n      Sign Out\\n    </button>\\n  </div>\\n</div>\\n"},{"name":"UnlinkGoogleDialogComponent","id":"component-UnlinkGoogleDialogComponent-81812371c3d75905a33b804c96129b977f9a92a448bc6c09402c4bb3b82738a487129e3083340386b9acf8aa83716f8fbc93bbfad54095e8102f60f44e408cc3","file":"projects/countdown/src/app/settings/unlink-google-dialog/unlink-google-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-unlink-google-dialog","styleUrls":[],"styles":[],"templateUrl":["./unlink-google-dialog.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"showDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[125]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"UiButtonComponent","type":"component"},{"name":"UiDialogComponent","type":"component"},{"name":"UiAlertComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, inject, viewChild } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport {\\n  UiAlertComponent,\\n  UiButtonComponent,\\n  UiDialogComponent,\\n} from \'@cocco3/angular-ui\';\\nimport { GoogleAuthService } from \'../../services/GoogleAuthService\';\\nimport { LoggerService } from \'../../services/LoggerService\';\\n\\n@Component({\\n  imports: [UiButtonComponent, UiDialogComponent, UiAlertComponent],\\n  selector: \'app-unlink-google-dialog\',\\n  templateUrl: \'./unlink-google-dialog.html\',\\n})\\nexport class UnlinkGoogleDialogComponent {\\n  private logger = inject(LoggerService);\\n  private auth = inject(GoogleAuthService);\\n  private router = inject(Router);\\n\\n  private dialog = viewChild<UiDialogComponent>(\'dialog\');\\n\\n  protected error = \'\';\\n  protected isSaving = false;\\n\\n  protected resetForm() {\\n    this.isSaving = false;\\n    this.error = \'\';\\n  }\\n\\n  protected async revokeGoogleConsent() {\\n    try {\\n      this.isSaving = true;\\n      this.error = \'\';\\n\\n      const result = await this.auth.revokeConsent();\\n\\n      if (result.successful) {\\n        this.router.navigate([\'/login\']);\\n      }\\n    } catch (err) {\\n      this.isSaving = false;\\n      this.error =\\n        \'There was a problem unlinking your Google account, please try again.\';\\n      this.logger.error(\'Error unlinking Google\', err as Error);\\n    }\\n  }\\n\\n  public showDialog() {\\n    this.dialog()?.showModal();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<dialog #dialog ui-dialog heading=\\"Unlink Google\\" (afterClose)=\\"resetForm()\\">\\n  <p>\\n    Are you sure you want to unlink your Google account? This will also log you\\n    out of your current session.\\n  </p>\\n\\n  @if (error) {\\n    <ui-alert kind=\\"error\\">{{ error }}</ui-alert>\\n  }\\n\\n  <button\\n    ui-button\\n    uiSlot=\\"cancel\\"\\n    kind=\\"secondary\\"\\n    size=\\"medium\\"\\n    (click)=\\"dialog.close()\\"\\n  >\\n    Cancel\\n  </button>\\n  <button\\n    ui-button\\n    uiSlot=\\"submit\\"\\n    kind=\\"destructive\\"\\n    size=\\"medium\\"\\n    type=\\"button\\"\\n    (click)=\\"revokeGoogleConsent()\\"\\n    [disabled]=\\"isSaving\\"\\n    [loading]=\\"isSaving\\"\\n  >\\n    Unlink\\n  </button>\\n</dialog>\\n"}],"modules":[],"miscellaneous":{"variables":[{"name":"appConfig","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/app/app.config.ts","deprecated":false,"deprecationMessage":"","type":"ApplicationConfig","defaultValue":"{\\n  providers: [\\n    provideZoneChangeDetection({ eventCoalescing: true }),\\n    provideRouter(routes),\\n    provideHttpClient(withInterceptors([authInterceptor])),\\n  ],\\n}"},{"name":"authInterceptor","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/app/services/AuthInterceptor.ts","deprecated":false,"deprecationMessage":"","type":"HttpInterceptorFn","defaultValue":"(req, next) => {\\n  const auth = inject(GoogleAuthService);\\n  const router = inject(Router);\\n\\n  return next(req).pipe(\\n    catchError((error) => {\\n      if (error.status === 401) {\\n        auth.clearAccessToken();\\n        router.navigate([\'/login\']);\\n      }\\n      return throwError(() => error);\\n    })\\n  );\\n}"},{"name":"CountdownFormats","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/app/events/countdown/countdown.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\'days\', \'detailed\'] as const"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/environments/environment.dev.ts","deprecated":false,"deprecationMessage":"","type":"EnvConfig","defaultValue":"{\\n  env: \'dev\',\\n  googleClientId: \'{{ GOOGLE_CLIENT_ID }}\',\\n}"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"EnvConfig","defaultValue":"{\\n  env: \'prod\',\\n  googleClientId: \'{{ GOOGLE_CLIENT_ID }}\',\\n}"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"EnvConfig","defaultValue":"{\\n  env: \'local\',\\n  googleClientId: \'{{ GOOGLE_CLIENT_ID }}\',\\n}"},{"name":"mockCalendarEvents","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/app/events/page-events/mockCalendarEvents.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(): EventsData[] => {\\n  return [\\n    {\\n      id: \'1\',\\n      name: \'Hello world\',\\n      date: \'2025-05-02T19:26:55.086Z\',\\n    },\\n    {\\n      id: \'2\',\\n      name: \'Foo bar\',\\n      date: \'2025-02-02T19:26:55.086Z\',\\n    },\\n  ];\\n}"},{"name":"prepDates","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/app/services/GoogleCalendarService.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"({\\n  date,\\n  time,\\n  timeZone,\\n}: {\\n  date: string;\\n  time?: string;\\n  timeZone: string;\\n}) => {\\n  if (time) {\\n    return { dateTime: createDateTimeZoned(date, time, timeZone) };\\n  } else {\\n    return { date };\\n  }\\n}"}],"functions":[],"typealiases":[{"name":"ApiResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/services/GoogleCalendarService.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ApiResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/services/GoogleUserInfoService.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AuthConfig","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/services/GoogleAuthService.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"CountdownFormat","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"projects/countdown/src/app/events/countdown/countdown.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":199},{"name":"EnvConfig","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/environments/types.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EventItem","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/events/page-events/page-events.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EventsData","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/services/GoogleCalendarService.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"FormFields","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/events/create-event-dialog/create-event-dialog.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"UserInfoData","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/services/GoogleUserInfoService.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"enumerations":[],"groupedVariables":{"projects/countdown/src/app/app.config.ts":[{"name":"appConfig","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/app/app.config.ts","deprecated":false,"deprecationMessage":"","type":"ApplicationConfig","defaultValue":"{\\n  providers: [\\n    provideZoneChangeDetection({ eventCoalescing: true }),\\n    provideRouter(routes),\\n    provideHttpClient(withInterceptors([authInterceptor])),\\n  ],\\n}"}],"projects/countdown/src/app/services/AuthInterceptor.ts":[{"name":"authInterceptor","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/app/services/AuthInterceptor.ts","deprecated":false,"deprecationMessage":"","type":"HttpInterceptorFn","defaultValue":"(req, next) => {\\n  const auth = inject(GoogleAuthService);\\n  const router = inject(Router);\\n\\n  return next(req).pipe(\\n    catchError((error) => {\\n      if (error.status === 401) {\\n        auth.clearAccessToken();\\n        router.navigate([\'/login\']);\\n      }\\n      return throwError(() => error);\\n    })\\n  );\\n}"}],"projects/countdown/src/app/events/countdown/countdown.component.ts":[{"name":"CountdownFormats","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/app/events/countdown/countdown.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\'days\', \'detailed\'] as const"}],"projects/countdown/src/environments/environment.dev.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/environments/environment.dev.ts","deprecated":false,"deprecationMessage":"","type":"EnvConfig","defaultValue":"{\\n  env: \'dev\',\\n  googleClientId: \'{{ GOOGLE_CLIENT_ID }}\',\\n}"}],"projects/countdown/src/environments/environment.prod.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"EnvConfig","defaultValue":"{\\n  env: \'prod\',\\n  googleClientId: \'{{ GOOGLE_CLIENT_ID }}\',\\n}"}],"projects/countdown/src/environments/environment.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"EnvConfig","defaultValue":"{\\n  env: \'local\',\\n  googleClientId: \'{{ GOOGLE_CLIENT_ID }}\',\\n}"}],"projects/countdown/src/app/events/page-events/mockCalendarEvents.ts":[{"name":"mockCalendarEvents","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/app/events/page-events/mockCalendarEvents.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(): EventsData[] => {\\n  return [\\n    {\\n      id: \'1\',\\n      name: \'Hello world\',\\n      date: \'2025-05-02T19:26:55.086Z\',\\n    },\\n    {\\n      id: \'2\',\\n      name: \'Foo bar\',\\n      date: \'2025-02-02T19:26:55.086Z\',\\n    },\\n  ];\\n}"}],"projects/countdown/src/app/services/GoogleCalendarService.ts":[{"name":"prepDates","ctype":"miscellaneous","subtype":"variable","file":"projects/countdown/src/app/services/GoogleCalendarService.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"({\\n  date,\\n  time,\\n  timeZone,\\n}: {\\n  date: string;\\n  time?: string;\\n  timeZone: string;\\n}) => {\\n  if (time) {\\n    return { dateTime: createDateTimeZoned(date, time, timeZone) };\\n  } else {\\n    return { date };\\n  }\\n}"}]},"groupedFunctions":{},"groupedEnumerations":{},"groupedTypeAliases":{"projects/countdown/src/app/services/GoogleCalendarService.ts":[{"name":"ApiResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/services/GoogleCalendarService.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EventsData","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/services/GoogleCalendarService.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"projects/countdown/src/app/services/GoogleUserInfoService.ts":[{"name":"ApiResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/services/GoogleUserInfoService.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"UserInfoData","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/services/GoogleUserInfoService.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"projects/countdown/src/app/services/GoogleAuthService.ts":[{"name":"AuthConfig","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/services/GoogleAuthService.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"projects/countdown/src/app/events/countdown/countdown.component.ts":[{"name":"CountdownFormat","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"projects/countdown/src/app/events/countdown/countdown.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":199}],"projects/countdown/src/environments/types.ts":[{"name":"EnvConfig","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/environments/types.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"projects/countdown/src/app/events/page-events/page-events.component.ts":[{"name":"EventItem","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/events/page-events/page-events.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"projects/countdown/src/app/events/create-event-dialog/create-event-dialog.component.ts":[{"name":"FormFields","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"projects/countdown/src/app/events/create-event-dialog/create-event-dialog.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}]}},"routes":[],"coverage":{"count":2,"status":"low","files":[{"filePath":"projects/countdown/src/app/app-header/app-header.ts","type":"component","linktype":"component","name":"AppHeaderComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/app-main/app-main.component.ts","type":"component","linktype":"component","name":"AppMainComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/app.config.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"appConfig","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/events/countdown/countdown.component.ts","type":"component","linktype":"component","name":"CountdownComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/countdown/src/app/events/countdown/countdown.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CountdownFormats","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/events/countdown/countdown.component.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"CountdownFormat","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/events/create-event-dialog/create-event-dialog.component.ts","type":"component","linktype":"component","name":"CreateEventDialogComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/countdown/src/app/events/create-event-dialog/create-event-dialog.component.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"FormFields","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/events/page-events/mockCalendarEvents.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mockCalendarEvents","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/events/page-events/page-events.component.ts","type":"component","linktype":"component","name":"PageEventsComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/countdown/src/app/events/page-events/page-events.component.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"EventItem","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/page-login/page-login.component.ts","type":"component","linktype":"component","name":"PageLoginComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/countdown/src/app/services/AuthGuardService.ts","type":"guard","linktype":"guard","name":"AuthGuardService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/countdown/src/app/services/AuthInterceptor.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"authInterceptor","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/services/EnvironmentService.ts","type":"injectable","linktype":"injectable","name":"EnvironmentService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/countdown/src/app/services/GoogleAuthService.ts","type":"injectable","linktype":"injectable","name":"GoogleAuthService","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/countdown/src/app/services/GoogleAuthService.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"AuthConfig","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/services/GoogleCalendarService.ts","type":"injectable","linktype":"injectable","name":"GoogleCalendarService","coveragePercent":33,"coverageCount":"1/3","status":"medium"},{"filePath":"projects/countdown/src/app/services/GoogleCalendarService.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"prepDates","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/services/GoogleCalendarService.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"ApiResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/services/GoogleCalendarService.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"EventsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/services/GoogleUserInfoService.ts","type":"injectable","linktype":"injectable","name":"GoogleUserInfoService","coveragePercent":33,"coverageCount":"1/3","status":"medium"},{"filePath":"projects/countdown/src/app/services/GoogleUserInfoService.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"ApiResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/services/GoogleUserInfoService.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"UserInfoData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/app/services/LoggerService.ts","type":"injectable","linktype":"injectable","name":"LoggerService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/countdown/src/app/services/UserSettingsService.ts","type":"injectable","linktype":"injectable","name":"UserSettingsService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/countdown/src/app/settings/page-settings/page-settings.component.ts","type":"component","linktype":"component","name":"PageSettingsComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/countdown/src/app/settings/unlink-google-dialog/unlink-google-dialog.component.ts","type":"component","linktype":"component","name":"UnlinkGoogleDialogComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/countdown/src/environments/environment.dev.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/environments/environment.prod.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/environments/environment.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/countdown/src/environments/types.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"EnvConfig","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}');(0,angular.$)(documentation_namespaceObject);var _ref;const _storybook_preview={decorators:[(0,dist._d)({defaultTheme:"light",themes:{light:"theme-light",dark:"theme-dark"}})],parameters:{backgrounds:{disable:!0},controls:{expanded:!0,hideNoControlsWarning:!0,sort:"requiredFirst",matchers:{color:/(background|color)$/i,date:/Date$/i}},docs:{canvas:{sourceState:"shown"},codePanel:!0,source:{transform:(_ref=(0,asyncToGenerator.A)((function*(code){return yield function formatAngularCode(_x){return _formatAngularCode.apply(this,arguments)}(code)})),function transform(_x){return _ref.apply(this,arguments)})}},options:{storySort:{method:"alphabetical",order:["intro","app","*"]}}}}},"./projects/countdown/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/countdown\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./storybook/Welcome.mdx":["./projects/countdown/src/storybook/Welcome.mdx",731,428]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./projects/countdown/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/countdown\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$",module.exports=webpackAsyncContext},"./projects/countdown/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/countdown\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./app/events/countdown/countdown.stories":["./projects/countdown/src/app/events/countdown/countdown.stories.ts",634,166],"./app/events/countdown/countdown.stories.ts":["./projects/countdown/src/app/events/countdown/countdown.stories.ts",634,166]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./projects/countdown/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/countdown\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$",module.exports=webpackAsyncContext},"./projects/countdown/src/styles.css?ngGlobalStyle":()=>{},"./projects/ui/src/css/theme.css?ngGlobalStyle":()=>{},"./projects/ui/src/css/typography.css?ngGlobalStyle":()=>{},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var external_STORYBOOK_MODULE_CHANNELS_=__webpack_require__("storybook/internal/channels"),csf=(__webpack_require__("storybook/internal/core-events"),__webpack_require__("./node_modules/storybook/dist/csf/index.js")),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/preview-api"),asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");const importers=[function(){var _ref=(0,asyncToGenerator.A)((function*(path){if(!/^\.[\\/](?:projects\/countdown\/src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.mdx)$/.exec(path))return;const pathRemainder=path.substring(25);return __webpack_require__("./projects/countdown/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/countdown\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$")("./"+pathRemainder)}));return function(_x){return _ref.apply(this,arguments)}}(),function(){var _ref2=(0,asyncToGenerator.A)((function*(path){if(!/^\.[\\/](?:projects\/countdown\/src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|mjs|ts|tsx))$/.exec(path))return;const pathRemainder=path.substring(25);return __webpack_require__("./projects/countdown/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/countdown\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$")("./"+pathRemainder)}));return function(_x2){return _ref2.apply(this,arguments)}}()];function _importFn(){return(_importFn=(0,asyncToGenerator.A)((function*(path){for(let i=0;i<importers.length;i++){const moduleExports=yield(x=()=>importers[i](path),x());if(moduleExports)return moduleExports}var x}))).apply(this,arguments)}const channel=(0,external_STORYBOOK_MODULE_CHANNELS_.createBrowserChannel)({page:"preview"});external_STORYBOOK_MODULE_PREVIEW_API_.addons.setChannel(channel),"DEVELOPMENT"===external_STORYBOOK_MODULE_GLOBAL_.global.CONFIG_TYPE&&(window.__STORYBOOK_SERVER_CHANNEL__=channel);const preview=new external_STORYBOOK_MODULE_PREVIEW_API_.PreviewWeb((function importFn(_x3){return _importFn.apply(this,arguments)}),(()=>{const previewAnnotations=[__webpack_require__("./node_modules/@storybook/angular/dist/client/preview-prod.mjs"),__webpack_require__("./node_modules/@storybook/angular/dist/client/config.mjs"),__webpack_require__("./node_modules/@storybook/angular/dist/client/docs/config.mjs"),__webpack_require__("./node_modules/@storybook/addon-themes/dist/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/preview.mjs"),__webpack_require__("./projects/countdown/.storybook/preview.ts")],userPreview=previewAnnotations[previewAnnotations.length-1]?.default;return(0,csf.bU)(userPreview)?userPreview.composed:(0,external_STORYBOOK_MODULE_PREVIEW_API_.composeConfigs)(previewAnnotations)}));window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel},"@storybook/global":module=>{"use strict";module.exports=__STORYBOOK_MODULE_GLOBAL__},"storybook/internal/channels":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CHANNELS__},"storybook/internal/client-logger":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CLIENT_LOGGER__},"storybook/internal/core-events":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS__},"storybook/internal/preview-errors":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__},"storybook/preview-api":module=>{"use strict";module.exports=__STORYBOOK_MODULE_PREVIEW_API__}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[647],(()=>(__webpack_exec__("./node_modules/zone.js/fesm2015/zone.js"),__webpack_exec__("./node_modules/@angular/compiler/fesm2022/compiler.mjs"),__webpack_exec__("./storybook-config-entry.js"),__webpack_exec__("./projects/ui/src/css/theme.css?ngGlobalStyle"),__webpack_exec__("./projects/ui/src/css/typography.css?ngGlobalStyle"),__webpack_exec__("./projects/countdown/src/styles.css?ngGlobalStyle"))));__webpack_require__.O()}]);